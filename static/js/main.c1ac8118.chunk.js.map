{"version":3,"sources":["components/Style.module.css","components/Form.jsx","components/ContactList.jsx","components/Filter.jsx","App.js","index.js"],"names":["module","exports","Form","state","id","name","number","nameInputId","uuidv4","numberInputId","handleChange","event","currentTarget","value","setState","handleFormSubmit","preventDefault","props","onSubmitData","reset","onSubmit","this","className","style","form","htmlFor","type","pattern","title","required","onChange","input","btn","Component","ContactList","contacts","onDeteleContact","list","map","item","onClick","Filter","onCange","filter","App","dublicateContacts","isFinded","find","contact","toLowerCase","deleteContact","alert","formSubmitData","data","contactId","prevState","changeFilter","element","getFilteredContacts","normaliseNameContact","includes","localStorageContacts","JSON","parse","localStorage","getItem","setItem","stringify","filteredContacts","wrapper","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1ac8118.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Style_wrapper__QNkB7\",\"form\":\"Style_form__2X6FO\",\"input\":\"Style_input__1fxob\",\"btn\":\"Style_btn__3zuRG\",\"filter\":\"Style_filter__2TnpC\",\"list\":\"Style_list__2HRwI\",\"item\":\"Style_item__QpHRD\"};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport style from './Style.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    id: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmitData(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleFormSubmit} className={style.form}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}\r\n            className={style.input}\r\n          />\r\n        </label>\r\n        <label htmlFor={this.numberInputId}>\r\n          Phone:\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n            className={style.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={style.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n\r\n// handleChange = event => {\r\n//   this.setState({ name: event.currentTarget.value });\r\n// };\r\n\r\n// handleFormSubmit = event => {\r\n//   event.preventDefault();\r\n//   console.log(this.props.state);\r\n//   this.props.onSubmit(this.props.state);\r\n\r\n//   uuidv4();\r\n//   this.reset();\r\n// };\r\n\r\n// reset = () => {\r\n//   this.setState({\r\n//     contacts: [],\r\n//     name: ' ',\r\n//   });\r\n// };\r\n","import React from 'react';\r\nimport style from './Style.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeteleContact }) => (\r\n  <ul className={style.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={style.item}>\r\n        {name}: {number};\r\n        <button onClick={() => onDeteleContact(id)}>Delete contact</button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport style from './Style.module.css';\r\n\r\nconst Filter = ({ value, onCange }) => (\r\n  <label className={style.filter}>\r\n    Filter by name:\r\n    <input type=\"text\" value={value} onChange={onCange}></input>\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport Form from './components/Form.jsx';\r\nimport ContactList from './components/ContactList.jsx';\r\nimport Filter from './components/Filter.jsx';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport style from './components/Style.module.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const localStorageContacts = JSON.parse(localStorage.getItem('contacts'));\r\n\r\n    localStorageContacts && this.setState({ contacts: localStorageContacts });\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    const { contacts } = this.state;\r\n    if (contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  dublicateContacts = name => {\r\n    const { contacts } = this.state;\r\n\r\n    const isFinded = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (isFinded) {\r\n      this.deleteContact(isFinded.id);\r\n      alert('Контакт уже есть в списке !');\r\n    }\r\n  };\r\n\r\n  formSubmitData = data => {\r\n    const { name, number } = data;\r\n    const generetedId = uuidv4();\r\n\r\n    const contact = {\r\n      id: generetedId,\r\n      name,\r\n      number,\r\n    };\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [contact, ...contacts],\r\n    }));\r\n    this.dublicateContacts(name);\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = element => {\r\n    this.setState({ filter: element.currentTarget.value });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normaliseNameContact = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normaliseNameContact),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    const { filter } = this.state;\r\n    return (\r\n      <div className={style.wrapper}>\r\n        <h1>Phonebook</h1>\r\n        <Form onSubmitData={this.formSubmitData} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onCange={this.changeFilter} />\r\n\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          onDeteleContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}